{{- $fullName := include "rundeck.fullname" . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-rundeck-backend
  labels: {{ include "rundeck.labels" . | indent 4 }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  revisionHistoryLimit: 1
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $fullName }}-rundeck-backend
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        # This will restart the rundeck pod if its environment configuration is updated by helm
        checksum/config: {{ include (print $.Template.BasePath "/rundeck-environment-configmap.yaml") . | sha256sum }}
        {{- with .Values.deployment.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ $fullName }}-rundeck-backend
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          command: ["/bin/bash"]
          args: ["/custom-scripts/bootstrap.sh"]
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-environment-configmap
          {{- if .Values.rundeck.envSecret }}
          - secretRef:
              name: {{ .Values.rundeck.envSecret }}
          {{- end }}
          ports:
            - name: rundeck
              containerPort: 4440
              protocol: TCP
          env:
          {{- if not .Values.database.useInternalH2db }}
            - name: RUNDECK_DATABASE_DRIVER
              valueFrom:
                secretKeyRef:
                  name: {{.Values.database.secret_name | quote }}
                  key: type
            - name: RUNDECK_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{.Values.database.secret_name | quote }}
                  key: jdbc
            - name: RUNDECK_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{.Values.database.secret_name | quote }}
                  key: user          
            - name: RUNDECK_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.database.secret_name| quote }}
                  key: password
            {{- end }}
            - name: RUNDECK_GRAILS_URL
              value: {{ required "Please set the externUrl so grails can be configured!" .Values.externUrl | quote }}                     
          volumeMounts:
          - name: boostrap-wrapper-script
            mountPath: /custom-scripts
          {{- if .Values.volumeMounts }}
          {{- toYaml .Values.volumeMounts | nindent 10}}
          {{- end }}
          {{- if .Values.executionLogs.claim.enabled }}
          - name: {{ $fullName }}-execution-logs
            mountPath: /home/rundeck/var/logs/rundeck/
          {{- end }}
          {{- if .Values.data.claim.enabled }}
          - name: {{ $fullName }}-data
            mountPath: /home/rundeck/server/data
          {{- end }}
          {{- if .Values.addons.claim.enabled }}
          - name: {{ $fullName }}-addons
            mountPath: /home/rundeck/server/addons
          {{- end }}
          {{- if .Values.plugins.claim.enabled }}
          - name: {{ $fullName }}-plugins
            mountPath: /mnt/plugins
          {{- end }}
          {{- if .Values.rundeck.sshSecrets }}
          - name: sshkeys
            mountPath: /home/rundeck/.ssh
            readOnly: true
          {{- end }}
          {{- if .Values.rundeck.kubeConfigSecret }}
          - name: kube-config
            mountPath: /home/rundeck/.kube/
          {{- end }}
          {{- if .Values.rundeck.extraConfigSecret }}
          - name: extra-config
            mountPath: /home/rundeck/extra/
          {{- end }}
          {{- if .Values.rundeck.userCredentialsSecretName }}
          - name: user-credentials
            mountPath: /home/rundeck/server/config/realm.properties
            subPath: {{ .Values.rundeck.userCredentialsSecretSubpath }}
          {{- end }}
          {{- if .Values.rundeck.rundeckConfigConfigMap }}
          - name: rundeck-config-append
            mountPath: /home/rundeck/custom/rundeck-config
          {{- end }}
          {{- if .Values.rundeck.rundeckFrameworkConfigMap }}
          - name: framework-append
            mountPath: /home/rundeck/custom/framework
          {{- end }}          
          livenessProbe:
            httpGet:  
              path: /
              port: 4440
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 4440
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.sideCars }}
          {{- toYaml .Values.sideCars | nindent 8 }}
        {{- end }}
      {{- if .Values.nodeSelector }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}

      {{- if .Values.affinity }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}

      {{- if .Values.tolerations }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}

      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
      
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      
      serviceAccountName: {{ include "rundeck.serviceAccountName" . }}

      volumes:
        - name: boostrap-wrapper-script
          configMap:
            name: boostrap-wrapper-script
        {{- if .Values.executionLogs.claim.enabled }}
        - name: {{ $fullName }}-execution-logs
          persistentVolumeClaim:
            claimName: {{ $fullName }}-execution-logs-claim
        {{- end }}
        {{- if .Values.data.claim.enabled }}
        - name: {{ $fullName }}-data
          persistentVolumeClaim:
            claimName: {{ $fullName }}-data-claim
        {{- end }}  
        {{- if .Values.plugins.claim.enabled }}
        - name: {{ $fullName }}-plugins
          persistentVolumeClaim:
            claimName: {{ $fullName }}-plugins-claim
        {{- end }}  
        {{- if .Values.addons.claim.enabled }}
        - name: {{ $fullName }}-addons
          persistentVolumeClaim:
            claimName: {{ $fullName }}-addons-claim
        {{- end }}          
        {{- if .Values.rundeck.sshSecrets }}
        - name: sshkeys
          secret:
            secretName: {{ .Values.rundeck.sshSecrets }}
            # stands for chmod 0400
            defaultMode: 256
        {{- end }}
        {{- if .Values.rundeck.kubeConfigSecret }}
        - name: kube-config
          secret:
            secretName: {{ .Values.rundeck.kubeConfigSecret}}
        {{- end }}
        {{- if .Values.rundeck.extraConfigSecret }}
        - name: extra-config
          secret:
            secretName: {{ .Values.rundeck.extraConfigSecret}}
        {{- end }}
        {{- if .Values.rundeck.userCredentialsSecretName }}
        - name: user-credentials
          secret:
            secretName: {{ .Values.rundeck.userCredentialsSecretName}}
        {{- end }}
        {{- if .Values.rundeck.rundeckConfigConfigMap }}
        - name: rundeck-config-append
          configMap:
            name: {{ .Values.rundeck.rundeckConfigConfigMap }}
            items:
            - key: config
              path: rundeck-config-append.properties
        {{- end }}
        {{- if .Values.rundeck.rundeckFrameworkConfigMap }}
        - name: framework-append
          configMap:
            name: {{ .Values.rundeck.rundeckFrameworkConfigMap }}
            items:
            - key: config
              path: framework-append.properties
        {{- end }}
      {{- if .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 8}}
      {{- end }}

